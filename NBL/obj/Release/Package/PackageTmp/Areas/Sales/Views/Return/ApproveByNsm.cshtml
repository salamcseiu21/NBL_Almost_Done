@using NBL.Models.ViewModels.Deliveries
@model NBL.Models.ViewModels.Returns.ViewReturnModel
@{
    ViewBag.Title = "Approve";
    Layout = "~/Views/Shared/_UserLayoutPage.cshtml";
    var returnDetails = Model.ReturnDetailses;
    var invoice = Model.InvoiceModel;
    var i = 0;
}

<section class="content">

    <div class="row" >
        <div class="col-md-12">
            <h3 class="text-center text-green">Approve Sales Return</h3>
            <div class="panel panel-info">
                <div class="panel panel-body" style="margin: 0; padding: 0;">
                    <!-- info row -->
                    <div class="row invoice-info" style="padding: 15px;font-size: 14px">
                        <!-- /.col -->
                        <div class="col-md-3 invoice-col">
                            <img class="img-responsive" src="~/@(invoice.Client.ClientImage?? "Images/User.jpg")" alt="Client Image" title="@invoice.Client.ClientName" width="110" height="150">
                            <address>
                                @Html.Raw(invoice.Client?.GetMailingAddress())
                            </address>
                            <b>Outstanding : </b>@{
                                                                            if (invoice.Client.Outstanding < 0)
                                                                            {
                                                                                <b>(@(invoice.Client.Outstanding*(-1)))</b>
                                                                            }
                                                                            else
                                                                            {
                                                                                <b>
                                                                                    @invoice.Client.Outstanding
                                                                                </b>
                                                                            }
                                                                        }
                        </div>
                        <!-- /.col -->
                        <div class="col-md-9 invoice-col text-right">
                            <div class="row">
                                <div class="col-xs-12 table-responsive">
                                    <table class="table table-striped table-bordered">
                                        <thead>
                                        <tr>
                                            <th colspan="4"> Invoice Ref : @invoice.Delivery.DeliveryRef</th>
                                            <th colspan="4" class="text-right">Date: @invoice.Delivery.DeliveryDate.ToString("D")</th>
                                        </tr>
                                        <tr>
                                            <th style="width: 10px">SL</th>
                                            <th>Type </th>
                                            <th class="text-right">Unit Price (&#2547;)</th>
                                            <th class="text-right">Unit Discount (&#2547;)</th>
                                            <th class="text-right">Vat (&#2547;)</th>
                                            <th class="text-right">Sale Price (&#2547;)</th>
                                            <th class="text-right">Quantity</th>
                                            <th class="text-right">Invoice Amount (&#2547;)</th>
                                        </tr>

                                        </thead>
                                        <tbody>

                                            @{
                                                int rowNo = 0;
                                                foreach (IGrouping<string, ViewDeliveredOrderModel> details in invoice.DeliveryDetails.ToList().GroupBy(n => n.ProductCategoryName))
                                                {
                                                    foreach (ViewDeliveredOrderModel item in details)
                                                    {

                                                        <tr>
                                                            <td>  @(rowNo += 1)</td>
                                                            <td>@item.ProductName</td>

                                                            <td class="text-right">@item.UnitPrice.ToString("N2")</td>
                                                            <td class="text-right">@item.UnitDiscount.ToString("N2")</td>
                                                            <td class="text-right">@item.VatAmount.ToString("N2")</td>
                                                            <td class="text-right">@item.SalePrice.ToString("N2")</td>
                                                            <td class="text-right">@item.Quantity</td>
                                                            <td class="text-right">
                                                                @((item.Quantity * (item.UnitPrice - item.UnitDiscount)).ToString("N2"))
                                                            </td>
                                                        </tr>
                                                    }

                                                }


                                            }
                                            <tr>
                                                <th colspan="6" class="text-right">
                                                    Invocie Quantity & Amount
                                                </th>

                                                <th class="text-right">
                                                    @invoice.DeliveryDetails.ToList().Sum(n => n.Quantity)
                                                </th>

                                                <th class="text-right">
                                                    @invoice.DeliveryDetails.ToList().Sum(n => (n.Quantity * n.SalePrice) - (n.Quantity * n.VatAmount)).ToString("N2")
                                                </th>
                                            </tr>
                                            <tr>
                                                <th colspan="6" class="text-right">
                                                    Gross Discount
                                                </th>
                                                <th class="text-right">
                                                    =
                                                </th>
                                                <th class="text-right">
                                                    @(((invoice.Order.SpecialDiscount / invoice.Order.Quantity) * invoice.DeliveryDetails.Count).ToString("N2"))
                                                </th>
                                            </tr>
                                            <tr>
                                                <th colspan="6" class="text-right">
                                                    Vat
                                                </th>
                                                <th class="text-right">
                                                    =
                                                </th>
                                                <th class="text-right">
                                                    @invoice.DeliveryDetails.Sum(n => n.VatAmount * n.Quantity)
                                                </th>
                                            </tr>
                                            <tr>
                                                <th colspan="6" class="text-right">
                                                    Net Amount
                                                </th>

                                                <th class="text-right">
                                                    =
                                                </th>
                                                <th class="text-right">
                                                    @{
                                                        var sd = (invoice.Order.SpecialDiscount / invoice.Order.Quantity) * invoice.DeliveryDetails.Count;
                                                        var amount = invoice.DeliveryDetails.Sum(n => n.SalePrice * n.Quantity);
                                                        @((amount - sd).ToString("N2"))
                                                    }
                                                </th>
                                            </tr>
                                        </tbody>

                                    </table>
                                </div>
                                <!-- /.col -->
                            </div>
                        </div>
                        <!-- /.col -->
                    </div>
                    <!-- /.row -->
                    <!-- Table row -->
                   
                </div>
            </div>
            <h3 class="text-center text-green"> Return Details</h3>
         
                <table id="tbl_Return_details" class="table table-striped table-bordered">
                    <thead>
                    <tr>
                        <th>SL</th>
                        <th>Product Name</th>
                        <th class="text-center">Quanity</th>
                    </tr>
                    <tr>
                        <th colspan="2" class="text-right">Remarks:</th>
                        <th colspan="2">@Model.ReturnModel.Remarks</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var item in returnDetails)
                    {
                        i++;
                        <tr>
                            <td>@i</td>
                            <td>@item.ProductName</td>
                            <td class="text-center">@item.Quantity</td>
                        </tr>
                    }
                    </tbody>
                </table>
         
        
            @if (ViewBag.Result != null)
            {
                <div class="text-center text-danger">@ViewBag.Result</div>
            }
            @using (Html.BeginForm())
            {
                <div class="form-horizontal">
                    <div class="form-group">
                        <label for="Remarks" class="control-label col-md-3">Remarks</label>
                        <div class="col-md-9">
                            <input id="salesReturnId" name="salesReturnId" value="@ViewBag.SalesReturnId" type="hidden"/>
                            <textarea id="Remarks" name="Remarks" placeholder="Write remarks..." class="form-control" required autofocus style="resize: none" rows="3"></textarea>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-9 col-md-offset-3">

                            @Html.ActionLink(" Cancel", "ViewAll", "Return", null, new { @class = "btn btn-danger" })
                            <input type="submit" value="Save" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
   
</section>

@section Scripts
{
    <script>
        //$("#tbl_Return_details").DataTable();
    </script>
}
