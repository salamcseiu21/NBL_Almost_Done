@using NBL.Models.ViewModels
@model NBL.Models.ViewModels.Requisitions.ViewRequisitionModel

@{
    ViewBag.Title = "Requisition";
    Layout = "~/Views/Shared/_UserLayoutPage.cshtml";
    var user = (ViewUser) Session["user"];
}

<section class="content">
    <p class="text-center text-green" style="margin: 0;font-weight:bolder;font-size:20px">Branch Wise Requisition</p>
    <hr />
    @using (Html.BeginForm("AddRequisitionProductToXmlFile","Requisition",FormMethod.Post))
    {
        <div class="form-horizontal">
            <div class="row">
                <div class="col-md-6">

                    <div class="form-group">
                        <label class="control-label col-md-3">To Branch :</label>
                        <div class="col-md-9">
                            <input type="text" name="ToBranchName" id="ToBranchName" class="form-control" autofocus placeholder="Branch Name...." required />
                            <input type="hidden" id="ToBranchId" name="ToBranchId" />
                            <input type="hidden" name="RequisitionByUserId" id="RequisitionByUserId" value="@user.UserId"/>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3">Address :</label>
                        <div class="col-md-9">
                            <textarea id="BranchAddress" name="BranchAddress" class="form-control" readonly="readonly" rows="2" placeholder="Branch address...." style="resize: none"></textarea>

                        </div>
                    </div>
                </div>
                <div class="col-md-6">

                    <div class="form-group">
                        <label class="control-label col-md-3">Product Name : </label>
                        <div class="col-md-9">
                            <input type="text" name="ProductName" id="ProductName" class="form-control" placeholder="Type Product Name" required />
                            <input type="hidden" id="ProductId" name="ProductId" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3"> Stock Quantity : </label>
                        <div class="col-md-9">
                            <input type="number" name="StockQty" id="StockQty" class="form-control" placeholder="Quantity" required readonly="readonly"/>
                           
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3">Quantity : </label>
                        <div class="col-md-9">
                            <input type="number" name="Quantity" id="Quantity" class="form-control" placeholder="Quantity" required min="1" value="1"/>
                           
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-9 col-md-offset-3">
                            <div class="btn-toolbar">
                                <input type="button" id="addItemButton" value="Add Item" onclick="AddProduct(this)" class="btn btn-primary " />
                                <input type="button" id="removeAllButton" value="Remove All" onclick="RemoveAll(this)" class="btn btn-danger " />
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    }
 
    <p style="font-weight: bolder;font-size: 20px" class="text-center text-green">Product List</p>
   
    <div id="divRequisiontProductsToFactory"></div>
   
    <div id="dialog" title="Warning">
        <p> Requisition qty must be less than or equal stock qty </p>
    </div>
</section>
@section Scripts
{

    <script>

        $(document).ready(function() {
            $("#RequisitionDate").datepicker({ dateFormat: 'dd-MM-yy' });
            ViewTempRequisitionList();
            var inputs = document.getElementsByTagName('input');
            for (var i = 0; i < inputs.length; i++) {
                if (inputs[i].type === "text") {
                    inputs[i].onkeyup = doCheck;
                    inputs[i].onblur = doCheck;
                }
            }
        });
     
    </script>
    @*Autocomplete*@

    <script>
        $(function () {
            $("#ProductName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: RootUrl + 'corporate/Requisition/ProductNameAutoComplete/',
                        data: "{ 'prefix': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data,
                                function(item) {
                                    return item;
                                }));
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#ProductId").val(i.item.val);
                    var json = { productId: i.item.val };
                    $.ajax({
                        type: "POST",
                        url: RootUrl + 'corporate/Requisition/GetStockProductQuantityInFactoryById/',
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(json),
                        success: function (data) {
                            var qty = data.StockQty;
                            $("#StockQty").val(qty);
                            //$("#Quantity").SetAttr("max", qty);
                            //document.getElementById("Quantity").max = qty;
                        }
                    });
                },
                minLength: 1
            });
        });
    </script>
    <script type="text/javascript">
        $(function () {
            $("#ToBranchName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: RootUrl + 'common/BranchAutoComplete/',
                        data: "{ 'prefix': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data,
                                function(item) {
                                    return item;
                                }));
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#ToBranchId").val(i.item.val);
                    var bId = $("#ToBranchId").val();
                    //alert(i.item.val);
                    var json = { branchId: bId };
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetBranchDetailsById", "Common",new {area=""})',
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(json),
                        success: function (data) {

                            var address = data.BranchAddress;
                            $("#BranchAddress").val(address);
                      
                        }
                    });
                },
                minLength: 1
            });
        });
    </script>

    <script>
        function doCheck() {
            var allFilled = true;

            var inputs = document.getElementsByTagName('input');
            for (var i = 0; i < inputs.length; i++) {
                if (inputs[i].type === "text" && inputs[i].value === '') {
                    allFilled = false;
                    break;
                }
            }

            document.getElementById("addItemButton").disabled = !allFilled;
        }

    </script>

    @*Ajax form Submit*@
    <script>

        var productIdlist = [];
        function AddProduct(btnClicked) {
            var id = $("#ProductId").val();
            var branchId = $("#ToBranchId").val();
            var v = branchId > 9 ? "" + branchId : "0" + branchId;
            var str=v.concat(id);
            var a = $.inArray(str, productIdlist);
            if (a < 0) {
                productIdlist.push(str);
                //alert(str);
                var $form = $(btnClicked).parents('form');
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("AddRequisitionProductToXmlFile")',
                    data: $form.serialize(),
                    error: function (xhr, status, error) {
                        //do something about the error
                    },
                    success: function (response) {
                        //alert("Saved Successfully");
                        ViewTempRequisitionList();
                        $('#ProductName').val("");
                        $('#ProductId').val("");
                        $('#Quantity').val(1);
                    }
                });
                return false; // if it's a link to prevent post
           

            }
            else {
                alert("This Product already exits in the list");
            }

        }
    </script>


    <script>

        function Update(btnClicked) {
            ValidateMaxQuantity(btnClicked);
            var id = btnClicked.id;
            var qty = parseInt(btnClicked.value);
            var json = { id: id,quantity:qty };
            $.ajax({
                type: "POST",
                url: '@Url.Action("Update", "Requisition",new {area="Corporate"})',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(json),
                success: function (data) {
                    ViewTempRequisitionList();
                }
            });
        }
      
        function RemoveProductById(btnClicked) {

            //alert(btnClicked.id);
            if (confirm("Are you sure to remove this product ??")) {
                var id = btnClicked.id;
                var json = { id: id };
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("RemoveProductById", "Requisition",new {area="Corporate"})',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(json),
                    success: function (data) {

                        for (var i = productIdlist.length - 1; i >= 0; i--) {
                            if (productIdlist[i] === btnClicked.id) {
                                productIdlist.splice(i, 1);
                            }
                        }
                        ViewTempRequisitionList();
                    }
                });
            }

            
        }


        function RemoveAll(btnClick) {
            var result = confirm('Are you sure to remove all item ?');
            if (result) {
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("RemoveAll","Requisition",new {area="Corporate"})',
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        ViewTempRequisitionList();
                        productIdlist=[];
                    }

                });

            }
        }


        function ViewTempRequisitionList() {
            var reqByUserId = $("#RequisitionByUserId").val();
            var json = { RequisitionByUserId: reqByUserId };
            $.ajax({
                type: 'Post',
                url: RootUrl + "corporate/Requisition/LoadTempRequisitionProductList",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(json),
                success: function (data) {
                    $("#divRequisiontProductsToFactory").html(data);
                }
            });
        }
     
    </script>

    <script>
        function ConfirmRequisition(id) {

            if (confirm("Are you sure to Save  this requisition?")) {

                $("#saveRequisitionForm").submit();
                alert("Requisition submited Successfully!");

            } else {
                return false;// if it's a link to prevent post
            }

            return false;// if it's a link to prevent post


        }
    </script>
    
@*Validate Max Quantity*@
<script>

        function ValidateMaxQuantity(event) {
            var id = event.id;
            var requsitionQty = $("#" + id).val();
            if (requsitionQty === '') {
                requsitionQty = 0;
            } else {
                requsitionQty = parseInt($("#" + id).val(), 10);
            }
            //alert(deliverqty);

            var quantity = parseInt($("#StockQty").val(), 10);
            if (requsitionQty > quantity || requsitionQty < 0) {
                ShowWarningDialog();
                $("#" + id).val('1');
            }

        }

        function  ShowWarningDialog(){
            $("#dialog").dialog("open").parent().addClass("ui-state-error");
        }
</script>

<script>
        $( function() {
            $( "#dialog" ).dialog({
                autoOpen: false,
                show: {
                    effect: "blind"

                },
                hide: {
                    effect: "explode"

                }
            });


        } );
</script>
    

}


