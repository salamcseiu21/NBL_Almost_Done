@model NBL.Models.EntityModels.ReplaceModel
@{
    ViewBag.Title = "Entry";
    Layout = "~/Views/Shared/_UserLayoutPage.cshtml";
    var date = DateTime.Now.Date.ToString("dd-MMMM-yyyy");
}

<section class="content">
    <div class="row">
        <div class="col-md-8 col-md-offset-2" style="border: 1px solid">
            @if (TempData["SaveReplaceMessage"] != null)
            {
                @Html.Raw(TempData["SaveReplaceMessage"])
            }
            <h3 class="text-center text-green">Replace Entry</h3>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)

                <div class="form-horizontal">
                  
                    <div id="dane" class="text-center">
                     
                    </div>
                    <div class="form-group">
                        <label for="ClientId" class="control-label col-md-3">Client Name</label>
                        <div class="col-md-9">

                            <input type="text" name="ClientName" id="ClientName" class="form-control" placeholder="Type Product Name" required autofocus/>
                            <input type="hidden" id="ClientId" name="ClientId"/>
                            @Html.ValidationMessageFor(model => model.ClientName, "", new {@class = "text-danger"})
                        </div>
                    </div>


                    <div class="form-group">
                        <label for="ProductId" class="control-label col-md-3">Product</label>
                        <div class="col-md-9">

                            <input type="text" name="ProductName" id="ProductName" class="form-control" placeholder="Type Product Name" required/>
                            <input type="hidden" id="ProductId" name="ProductId"/>
                            @Html.ValidationMessageFor(model => model.ProductName, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="Barcode" class="control-label col-md-3">Replace For</label>
                        <div class="col-md-9">

                            <input type="text" name="Barcode" id="Barcode" class="form-control" placeholder="Bar code/ batch code.." required/>
                            @Html.ValidationMessageFor(model => model.Barcode, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="Quantity" class="control-label col-md-3">Quantity</label>
                        <div class="col-md-9">
                            <input type="number" name="Quantity" id="Quantity" class="form-control" value="1" placeholder="Quantity" min="1" max="1" required/>
                          
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="SaleDate" class="control-label col-md-3">Sale Date</label>
                        <div class="col-md-9">

                            <input type="text" id="SaleDate" name="SaleDate"  class="form-control" required placeholder="Sale date here.."/>
                            @Html.ValidationMessageFor(model => model.SaleDate, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3">Distribution Point</label>
                        <div class="col-md-9">
                            @Html.DropDownListFor(model => model.DistributionPointId, null, new { @class = "form-control" })

                        </div>
                    </div>
                    <div class="form-group">
                        <label for="Remarks" class="control-label col-md-3">Remarks</label>
                        <div class="col-md-9">


                            <textarea id="Remarks" name="Remarks" rows="3" required style="resize: none; width: 100%" placeholder="Remarks..."></textarea>
                            @Html.ValidationMessageFor(model => model.Remarks, "", new {@class = "text-danger"})

                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3"></div>
                        <div class="col-md-9">

                            <div class="btn-toolbar">
                                <input type="submit" value="Save" class="btn btn-info"/>
                                @Html.ActionLink("Back", "ViewAll", "Replace", null, new {@class = "btn btn-danger"})

                                @*<input type="button" id="removeAllButton" value="Remove All" onclick="RemoveAll(this)" class="btn btn-danger "/>
                                <input type="button" value="Submit" class="btn btn-primary" onclick="SaveReplacementInfo(this.form)"/>*@
                            </div>
                        </div>
                    </div>
                </div>
            }
           
           
            @*<div class="row">
                <div class="col-md-12">
                    <div id="divReplaceProducts"></div>
                </div>

            </div>*@
        </div>
    </div>
    <br/>
    
    @using (Html.BeginForm("SaveReplacementInfo","Replace",FormMethod.Post,new {id= "SaveReplacementInfoForm" }))
    {

        <div class="form-horizontal">
            <input type="hidden" id="ClientId1" name="ClientId1" />
            <div class="form-group">
                
            </div>
        </div>
    }
</section>


@section Scripts
{
    <script>
        $(function () {

            $("#SaleDate").datepicker(
                {
                    dateFormat: 'dd-MM-yy',
                    changeMonth: true,
                    changeYear: true,
                    yearRange: "2010:+0",
                    maxDate: '0D'

                });

        });
    </script>
    
    <script>
        
        function SaveReplacementInfo(form) {

           // alert(btnClicked.id);
            if (confirm("Are you sure to save this replacement info ??")) {
                $("#SaveReplacementInfoForm").submit();
            }


        }
        
        function RemoveProductById(btnClicked) {

            //alert(btnClicked.id);
            if (confirm("Are you sure to remove this product ??")) {
                var id = btnClicked.value;
                var json = { id: id };
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("RemoveProductById", "Replace",new {area="Services"})',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(json),
                    success: function (data) {
                        LoadAllTempReplaceProduct();
                    }
                });
            }


        }

        function RemoveAll(btnClick) {
            var result = confirm('Are you sure to remove all item ?');
            if (result) {
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("RemoveAll","Replace",new {area="Services"})',
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        LoadAllTempReplaceProduct();
                    }

                });

            }
        }

        $(document).ready(function () {

            // LoadAllTempReplaceProduct();
           
        });
    </script>
    <script>
        $(function () {
            $("#ClientName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: RootUrl + 'Common/ClientNameAutoComplete/',
                        data: "{ 'prefix': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data,
                                function (item) {
                                    return item;
                                }));
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#ClientId").val(i.item.val);
                    $("#ClientId1").val(i.item.val);
                },
                minLength: 1
            });
        });


        $(function () {
            $("#ProductName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: RootUrl + 'common/ProductNameAutoComplete/',
                        data: "{ 'prefix': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data,
                                function (item) {
                                    return item;
                                }));
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#ProductId").val(i.item.val);
                },
                minLength: 1
            });
        });

        function LoadAllTempReplaceProduct() {
          
            $.ajax({
                type: 'Post',
                url: RootUrl + "services/replace/LoadAllTempReplaceProduct",
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    $("#divReplaceProducts").html(data);
                }
            });
        }

        function ClearTextBox() {
            location.reload(true);
        }
    </script>
}
