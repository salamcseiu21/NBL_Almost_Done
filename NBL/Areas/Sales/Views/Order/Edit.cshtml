
@model NBL.Models.ViewModels.Orders.ViewOrder

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_UserLayoutPage.cshtml";
}

<section class="content">
    <h3 class="text-center text-green headingStyle">Update Order</h3>
    <br />
    <div style="border: 1px dotted; padding: 10px; font-size: 18px">

        @Html.Partial("_OrderDetailsHeaderPartialPage", Model)
        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "addnewSaleForm" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal" style="padding:0;">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="text-center">
                    @if (ViewBag.Result != null)
                    {
                        @Html.Raw(ViewBag.Result)
                    }
                </div>
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            <input type="hidden" name="OrderId" id="OrderId" value="@Model.OrderId" />
                            <input type="hidden" name="ClientId" id="ClientId" value="@Model.Client.ClientId" />
                            <label for="ProductId" class="control-label col-md-3">Product</label>
                            <div class="col-md-9">
                                
                                <input type="text" name="ProductName" id="ProductName" class="form-control" onkeyup="ResetProductId(this)" placeholder="Type Product Name" required />
                                <input type="hidden" id="ProductId" name="ProductId" />

                            </div>
                        </div>
                      

                    </div>
                    <div class="col-md-2">
                        <div class="form-group">


                            <label for="StockQty" class="control-label col-md-3">Stock</label>
                            <div class="col-md-9">

                                <input type="number" id="StockQty" name="StockQty" class="form-control" readonly value="0" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="UnitPrice" class="control-label col-md-3">Unit Price</label>
                            <div class="col-md-9">

                                <input type="number" id="UnitPrice" name="UnitPrice" class="form-control" readonly />

                            </div>
                        </div>
                    </div>
                  
                    <div class="col-md-2">
                        
                        <div class="form-group">
                            <label for="ProductId" class="control-label col-md-4">Quantity</label>
                            <div class="col-md-8">

                                <input type="number" id="Quantity" name="Quantity" class="form-control" min="1" value="1" />

                            </div>
                        </div>
                     
                    </div>
                    <div class="col-md-1">
                        <div class="form-group">
                            <div class="col-md-10">
                                <input type="button" id="btnAddItem" value="Add Item" onclick="AddItemToList(this)" class="btn btn-primary btn-block" />
                            </div>
                           
                           
                        </div>
                    </div>
                </div>

            </div>
        }
        <div class="row" style="padding:0 10px">
            <p style="font-weight: bolder;font-size: 20px" class="text-center text-green">Product List</p>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "updateQuantiyForm" }))
            {
                <input type="hidden" id="productIdToRemove" name="productIdToRemove" />
                <table class="table table-bordered" style="margin: 0; padding: 0;font-size:13px">

                    <thead>

                        <tr>
                            <th style="border: 1px solid black;" class="text-center">Product Name</th>
                            <th style="border: 1px solid black;" class="text-center">Unit Price (&#2547;)</th>
                            <th style="border: 1px solid black;" class="text-center">Vat (&#2547;)</th>
                            <th style="border: 1px solid black;" class="text-center">Discount (&#2547;)</th>
                            <th style="border: 1px solid black;" class="text-center">Sale Price(&#2547;)</th>
                            <th style="border: 1px solid black; width: 10%" class="text-center">Quantity</th>
                            <th style="border: 1px solid black;" class="text-center">Sub Total (&#2547;)</th>
                            <th style="border: 1px solid black;" class="text-center">Action</th>
                        </tr>
                    </thead>
                    <tbody id="orders"></tbody>
                </table>
            }
          <hr />
        </div>

        <div class="row">
         

            @using (Html.BeginForm())
            {
                var amount = Model.OrderItems.Sum(n => n.SubTotal) - Model.SpecialDiscount;
                <div class="form-horizontal">
                    <div class="col-md-3" style="border: none">
                        <div class="form-group">
                            <label class="control-label col-md-4">Quantity</label>
                            <div class="col-md-8">
                                <input type="number" name="TotalQuantity" id="TotalQuantity" class="form-control text-right" readonly="readonly" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3" style="border: none">
                        <div class="form-group">
                            <label class="control-label col-md-4">Amount (&#2547;)</label>
                            <div class="col-md-8">
                                <input type="number" name="Amount" id="Amount" class="form-control text-right" value="@Model.OrderItems.Sum(n=>n.SubTotal)" readonly="readonly" />
                            </div>
                        </div>
                    </div>
                   
                    <div class="col-md-3" style="border: none">
                        <div class="form-group">
                            <label class="control-label col-md-4">Discount (&#2547;)</label>
                            <div class="col-md-8">
                                <input type="number" value="@Model.SpecialDiscount" name="Discount" id="Discount" step="any" class="form-control text-right" onkeyup="CalculateNetAmount(this)" />
                            </div>
                        </div>
                       
                    </div>
                    <div class="col-md-3" style="border: none">
                       
                        <div class="form-group">
                            <label class="control-label col-md-4">Net (&#2547;)</label>
                            <div class="col-md-8">
                                <input type="number" value="@amount" name="Net" id="Net" class="form-control text-right" readonly />
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2"></label>
                            <div class="col-md-10 text-right">
                                @Html.ActionLink("Back", "PendingOrders", "Order", new { area = "Sales" }, new { @class = "btn btn-info" })
                                <input type="submit" value="Update" class="btn btn-success" />
                            </div>
                        </div>
                    </div>
                </div>
            }
          
        </div>

    </div>
</section>

@section Scripts
{
    
    <script>
        $(document).ready(function() {
            ToggleAddItemButton();
            ViewTempOrders();
        });

        function ToggleAddItemButton() {

            var pId = parseInt($("#ProductId").val());
            if (pId >0) {
                $("#btnAddItem").removeAttr('disabled');
            } else {
                $("#btnAddItem").attr('disabled', true);
            }
        }

        function ResetProductId(event) {
            $("#ProductId").val("0");
        }
    </script>
    <script type="text/javascript">

        function CalcualteFinalAmount(value, total) {
            var t = $("#Amount").val();
            var f = t - value;
            $("#due").val(f);
        }

        function minmax(value, min, max)
        {


            if(parseInt(value) < min || isNaN(parseInt(value)))
                return 0;
            else if(parseInt(value) > max)
                return 0;
            else return value;
        }
    </script>

<script>


    var productIdlist = [];

    @foreach (var d in Model.OrderItems.ToList().Select(n=>n.ProductId))
    {
        @:productIdlist.push("@d");
    }

    function AddItemToList(btnClicked) {
        var id = $("#ProductId").val();
        //alert(btnClicked.id);

        var a = $.inArray(id, productIdlist);

        if (a<0)
        {
            productIdlist.push(id);
            var $form = $(btnClicked).parents('form');
            $.ajax({
                type: "POST",
                url: '@Url.Action("AddNewItemToExistingOrder")',
                data: $form.serialize(),
                error: function (xhr, status, error) {
                    //do something about the error
                },
                success: function (response) {
                    //alert("Saved Successfully");
                    ViewTempOrders();
                }
            });

            return false; // if it's a link to prevent post
           
        }
        else
        {
            alert("This Product already exits in the list");
        }



    }
    function Update(btnClicked) {
        $("#productIdToRemove").val(0);
        var $form = $(btnClicked).parents('form');
        var pId = btnClicked.id;

        var json = { productId: pId };

        $.ajax({
            type: "POST",
            url: '@Url.Action("GetProductQuantityInStockById", "Common", new { area = "" })',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(json),
            success: function (data) {

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("UpdateOrder")',
                    data: $form.serialize(),
                    error: function (xhr, status, error) {
                        //do something about the error
                    },
                    success: function (response) {
                        ViewTempOrders();
                    }
                });

                return false; // if it's a link to prevent post
            }
        });

    }
    function RemoveProduct(btnClicked) {


        if (confirm("Are you sure to remove this product ??")) {

            $("#productIdToRemove").val(btnClicked.id);

            var $form = $(btnClicked).parents('form');
            $.ajax({
                type: "POST",
                url: '@Url.Action("UpdateOrder")',
                data: $form.serialize(),
                error: function (xhr, status, error) {
                    //do something about the error
                },
                success: function (response) {
                    for (var i = productIdlist.length - 1; i >= 0; i--) {
                        if (productIdlist[i] === btnClicked.id) {
                            productIdlist.splice(i, 1);
                        }
                    }
                    ViewTempOrders();

                }
            });
        } else {
            return false;// if it's a link to prevent post
        }

        return false;// if it's a link to prevent post

    }

  
</script>
<script src="~/Areas/Sales/Scripts/loadOrderDetails.js"></script>
<script>
    function Cancel(id) {

        if (confirm("Are you sure to cancel  this Order ?")) {
            var pId = btnClicked.id;
            var json = { productId: id.id };
            var $form = $(btnClicked).parents('form');
            $.ajax({
                type: "POST",
                url: '@Url.Action("Cancel")',
                data: $form.serialize(),
                error: function (xhr, status, error) {
                    //do something about the error
                },
                success: function (response) {
                    //alert("Saved Successfully");
                    ViewTempOrders();
                }
            });
        } else {
            return false;// if it's a link to prevent post
        }

        return false;// if it's a link to prevent post


    }
</script>

<script>
    function CalculateNetAmount(id) {

        var total = $("#Amount").val();
        var com = $("#Discount").val();
        var net = total - com;
        $("#Net").val(net);
    }

    function PreviewOrderDetails(id) {

        if (confirm("Are you sure to Save  this Order?")) {

            $("#saveOrderForm").submit();
        } else {
            return false;// if it's a link to prevent post
        }

        return false;// if it's a link to prevent post


    }
</script>

@*Product name Autocomplete*@

    <script type="text/javascript">
        $(function () {
            $("#ProductName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: RootUrl + 'common/ProductNameAutoComplete/',
                        data: "{ 'prefix': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data,
                                function(item) {
                                    return item;
                                }));
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#ProductId").val(i.item.val);
                    var json = { productId: i.item.val };
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetProductById", "Common", new { area = "" })',
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(json),
                        success: function (data) {

                            var unitPrice = data.UnitPrice;
                            var dealerPrice = data.DealerPrice;
                            var vat = data.Vat;
                            var dealerComision = data.DealerComision;
                            $("#UnitPrice").val(unitPrice);
                            $("#DealerPrice").val(dealerPrice);
                            $("#Vat").val(vat);
                            $("#DealerComision").val(dealerComision);
                        }
                    });

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetProductQuantityInStockById", "Common",new {area="" })',
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(json),
                        success: function (data) {
                            var qty = data.StockQty;
                            $("#StockQty").val(qty);
                            ToggleAddItemButton();
                        }
                    });
                },
                minLength: 1
            });
        });
    </script>

}
